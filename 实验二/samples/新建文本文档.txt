DeclList ->
Type -> Void
Formals ->
StmtList ->
Type -> Int
Variable ->Type identifier
VariableDecl -> Variable;
Stmt ->VariableDecl
StmtList -> StmtList Stmt
Type -> Bool
Variable ->Type identifier
VariableDecl -> Variable;
Stmt ->VariableDecl
StmtList -> StmtList Stmt
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Constant ->intConstant
Expr ->Constant
SimpleStmt -> Lvalue =  Expr
Stmt ->SimpleStmt;
StmtList -> StmtList Stmt
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Expr -> Lvalue
Constant ->intConstant
Expr ->Constant
Expr < Expr
BoolExpr ->Expr
StmtList ->
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Expr -> Lvalue
ExprList -> Expr
Constant ->stringConstant
Expr ->Constant
ExprList -> ExprList , Expr
PrintStmt -> Print ( ExprList )
Stmt ->PrintStmt;
StmtList -> StmtList Stmt
OptReceiver ->
Lvalue   ->  OptReceiver identifier
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Expr -> Lvalue
Constant ->intConstant
Expr ->Constant
Expr ->Expr + Expr
SimpleStmt -> Lvalue =  Expr
Stmt ->SimpleStmt;
StmtList -> StmtList Stmt
StmtBlock -> '{' StmtList '}'
Stmt ->StmtBlock
WhileStmt -> while ( BoolExpr ) Stmt
Stmt ->WhileStmt
StmtList -> StmtList Stmt
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Expr -> Lvalue
Constant ->intConstant
Expr ->Constant
Expr ->Expr  3.557354E-307xpr
Constant ->intConstant
Expr ->Constant
Expr ->Expr == Expr
BoolExpr ->Expr
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Constant ->intConstant
Expr ->Constant
SimpleStmt -> Lvalue =  Expr
Stmt ->SimpleStmt;
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Constant ->boolConstant
Expr ->Constant
SimpleStmt -> Lvalue =  Expr
Stmt ->SimpleStmt;
OptElse -> else Stmt
IfStmt -> if ( BoolExpr ) Stmt OptElse
Stmt ->IfStmt
StmtList -> StmtList Stmt
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Constant ->intConstant
Expr ->Constant
SimpleStmt -> Lvalue =  Expr
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Expr -> Lvalue
Constant ->intConstant
Expr ->Constant
Expr ->Expr <= Expr
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Expr -> Lvalue
Expr ->Expr && Expr
BoolExpr ->Expr
OptReceiver ->
Lvalue   ->  OptReceiver identifier
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Expr -> Lvalue
Constant ->intConstant
Expr ->Constant
Expr ->Expr + Expr
SimpleStmt -> Lvalue =  Expr
StmtList ->
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Expr -> Lvalue
ExprList -> Expr
Constant ->stringConstant
Expr ->Constant
ExprList -> ExprList , Expr
PrintStmt -> Print ( ExprList )
Stmt ->PrintStmt;
StmtList -> StmtList Stmt
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Expr -> Lvalue
Constant ->intConstant
Expr ->Constant
Expr ->Expr == Expr
BoolExpr ->Expr
OptReceiver ->
Lvalue   ->  OptReceiver identifier
Expr -> Lvalue
SimpleStmt ->  =  Expr
Stmt ->SimpleStmt;
OptElse ->
IfStmt -> if ( BoolExpr ) Stmt OptElse
Stmt ->IfStmt
StmtList -> StmtList Stmt
StmtBlock -> '{' StmtList '}'
Stmt ->StmtBlock
ForStmt -> for ( SimpleStmt ; BoolExpr ; SimpleStmt ) Stmt
Stmt ->ForStmt
StmtList -> StmtList Stmt
StmtBlock -> '{' StmtList '}'
FunctionDecl -> Identifier
Decl -> FunctionDefn
DeclList -> DeclList Decl
Program -> DeclList
请按任意键继续. . .